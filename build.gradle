/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'mboparai' at '1/14/17 1:28 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    //testCompile 'junit:junit:4.12'
	
	// https://mvnrepository.com/artifact/log4j/log4j
	//compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.5'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.5'
	//compile group: 'log4j', name: 'log4j', version: '1.2.16'
	
	// https://mvnrepository.com/artifact/commons-cli/commons-cli
	//compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
	
	// https://mvnrepository.com/artifact/org.springframework/
	compile 'org.springframework:spring-core:4.1.6.RELEASE'
	compile 'org.springframework:spring-context:4.1.6.RELEASE'
	compile 'org.springframework:spring-beans:4.1.6.RELEASE'
	//compile 'org.springframework:spring-jdbc:4.1.6.RELEASE'
	//compile 'org.springframework:spring-orm:4.1.6.RELEASE'
	//compile 'org.springframework:spring-test:4.1.6.RELEASE'
	
	// https://mvnrepository.com/artifact/com.google.guava/guava
	//compile group: 'com.google.guava', name: 'guava', version: '19.0'
	
	// https://mvnrepository.com/artifact/commons-io/commons-io
	//compile group: 'commons-io', name: 'commons-io', version: '2.4'
	
	// https://mvnrepository.com/artifact/commons-collections/commons-collections
	//compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
	
	// https://mvnrepository.com/artifact/commons-logging/commons-logging
	//compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
	
	// https://mvnrepository.com/artifact/org.reflections/reflections
	//compile group: 'org.reflections', name: 'reflections', version: '0.9.9'
	    
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
	//compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
	
	// https://mvnrepository.com/artifact/org.snmp4j/snmp4j
	//compile group: 'org.snmp4j', name: 'snmp4j', version: '2.5.0'
	
	// http://sparkjava.com/download.html
	compile "com.sparkjava:spark-core:2.5.4"
	
	// https://mvnrepository.com/artifact/org.graphstream/gs-core
	compile group: 'org.graphstream', name: 'gs-core', version: '1.3'
	compile group: 'org.graphstream', name: 'gs-ui', version: '1.3'
	
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
	//compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'
	
	// https://projectlombok.org/mavenrepo/
	//compileOnly "org.projectlombok:lombok:1.16.12"
	
	// jackson - json parser library
	compile 'com.fasterxml.jackson.core:jackson-databind:2.8.3+'
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.3+'
    ////compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.3+'
    ////compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.3+'
	
}


//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
        	'Implementation-Version': '1.0',
        	'Main-Class': 'ca.empowered.nms.simulator.Main'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// 1. buil the project
// 2. delete the release zip
// 3. create release zip from 
// bin, conf, libs, readme.txt
task deleteReleaseZip(type: Delete) {
  	delete zipDir + projectName + '-' + projectVersion + '-release.zip'
}

task createReleaseZip(type: Zip) {
	//doLast {
	 	archiveName = projectName + '-' + projectVersion + '-release.zip'
	  	destinationDir = file(zipDir)
	  	from(fileTree(dir: srcDirBin)) {
	  		include '**/simulator.*'
	  		into dstDirBin
	  	}
	  	from(fileTree(dir: srcDirConf)) {
	  		include '**/*'
	  		exclude 'beans.xml'
	  		into dstDirConf
	  	}
	  	from(fileTree(dir: srcDirLib)) {
	  		include '**/*.jar'
	  		into dstDirLib
	  	}
	  	from(fileTree(dir: srcDirApp)) {
	  		include '**/' + projectName + '.jar'
	  		into dstDirApp
	  	}
	  	from srcFileReadMe
  	//}
}

createReleaseZip.dependsOn build
createReleaseZip.dependsOn deleteReleaseZip
